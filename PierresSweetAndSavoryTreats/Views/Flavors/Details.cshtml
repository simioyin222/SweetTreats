@{
  Layout = "_Layout";
}

@using PierresSweetAndSavoryTreats.Models;
@model PierresSweetAndSavoryTreats.Models.Flavor;

<div class="subheader bg">
  <h4>Pierre's Flavors</h4>
</div>
<br/>

<div class="main">
  <div class="row">
    <div class="col-5">
      <h4>Flavor Tag</h4>
      <p><strong>@Html.DisplayNameFor(chosenFlavor => chosenFlavor.Name)</strong>: @Html.DisplayFor(chosenFlavor => chosenFlavor.Name)</p>
    </div>
    <div class="col-7">
    <h4>Treats</h4>
    @if(@Model.JoinEntities.Count == 0)
    {
      <p>This flavor currently does not have any treats associated with it.</p>
    }
    else
    {
      <ul>
        @foreach(TreatFlavor joinEntry in Model.JoinEntities)
        {
          <li>@joinEntry.Treat.Name
          @using(Html.BeginForm("DeleteJoin", "Flavors"))
          {
            @Html.Hidden("joinId", @joinEntry.TreatFlavorId)
            <input type="submit" value="Remove"/>
          }
          </li>
        }
      </ul>
    }
    </div>
  </div>
</div>  
<hr/>

<p>@Html.ActionLink("Add a Treat to this Flavor Name", "AddTreat", new { id = Model.FlavorId })</p>
<p>@Html.ActionLink("Edit Flavor Name Details", "Edit", new { id = Model.FlavorId })</p>
<p>@Html.ActionLink("Delete Flavor Name Entry", "Delete", new { id = Model.FlavorId })</p>
<p>@Html.ActionLink("Back to Flavor Names List", "Index")</p>